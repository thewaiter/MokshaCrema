#define SECONDS_PLEASE (E17_PROFILE != HIRES_PDA && E17_PROFILE != LOWRES_PDA && E17_PROFILE != MEDIUMRES_PDA)

// To me, it is not about cpu time, it is about being bothered with
// movement I don't care about.  Force the second hand off.
#undef SECONDS_PLEASE
#define SECONDS_PLEASE 0
images {
   image: "c_images/clock_bg.png" COMP;
   image: "c_images/clock_overlay.png" COMP;
   image: "clock/e17_clock_fg.png" COMP;
   image: "clock/e17_clock_seconds_00.png" COMP;
   image: "clock/e17_clock_seconds_01.png" COMP;
   image: "clock/e17_clock_seconds_02.png" COMP;
   image: "clock/e17_clock_seconds_03.png" COMP;
   image: "clock/e17_clock_seconds_04.png" COMP;
   image: "clock/e17_clock_seconds_05.png" COMP;
   image: "clock/e17_clock_seconds_06.png" COMP;
   image: "clock/e17_clock_seconds_07.png" COMP;
   image: "clock/e17_clock_seconds_08.png" COMP;
   image: "clock/e17_clock_seconds_09.png" COMP;
   image: "clock/e17_clock_seconds_10.png" COMP;
   image: "clock/e17_clock_seconds_11.png" COMP;
   image: "clock/e17_clock_seconds_12.png" COMP;
   image: "clock/e17_clock_seconds_13.png" COMP;
   image: "clock/e17_clock_seconds_14.png" COMP;
   image: "clock/e17_clock_seconds_15.png" COMP;
   image: "clock/e17_clock_seconds_16.png" COMP;
   image: "clock/e17_clock_seconds_17.png" COMP;
   image: "clock/e17_clock_seconds_18.png" COMP;
   image: "clock/e17_clock_seconds_19.png" COMP;
   image: "clock/e17_clock_seconds_20.png" COMP;
   image: "clock/e17_clock_seconds_21.png" COMP;
   image: "clock/e17_clock_seconds_22.png" COMP;
   image: "clock/e17_clock_seconds_23.png" COMP;
   image: "clock/e17_clock_seconds_24.png" COMP;
   image: "clock/e17_clock_seconds_25.png" COMP;
   image: "clock/e17_clock_seconds_26.png" COMP;
   image: "clock/e17_clock_seconds_27.png" COMP;
   image: "clock/e17_clock_seconds_28.png" COMP;
   image: "clock/e17_clock_seconds_29.png" COMP;
   image: "clock/e17_clock_seconds_30.png" COMP;
   image: "clock/e17_clock_seconds_31.png" COMP;
   image: "clock/e17_clock_seconds_32.png" COMP;
   image: "clock/e17_clock_seconds_33.png" COMP;
   image: "clock/e17_clock_seconds_34.png" COMP;
   image: "clock/e17_clock_seconds_35.png" COMP;
   image: "clock/e17_clock_seconds_36.png" COMP;
   image: "clock/e17_clock_seconds_37.png" COMP;
   image: "clock/e17_clock_seconds_38.png" COMP;
   image: "clock/e17_clock_seconds_39.png" COMP;
   image: "clock/e17_clock_seconds_40.png" COMP;
   image: "clock/e17_clock_seconds_41.png" COMP;
   image: "clock/e17_clock_seconds_42.png" COMP;
   image: "clock/e17_clock_seconds_43.png" COMP;
   image: "clock/e17_clock_seconds_44.png" COMP;
   image: "clock/e17_clock_seconds_45.png" COMP;
   image: "clock/e17_clock_seconds_46.png" COMP;
   image: "clock/e17_clock_seconds_47.png" COMP;
   image: "clock/e17_clock_seconds_48.png" COMP;
   image: "clock/e17_clock_seconds_49.png" COMP;
   image: "clock/e17_clock_seconds_50.png" COMP;
   image: "clock/e17_clock_seconds_51.png" COMP;
   image: "clock/e17_clock_seconds_52.png" COMP;
   image: "clock/e17_clock_seconds_53.png" COMP;
   image: "clock/e17_clock_seconds_54.png" COMP;
   image: "clock/e17_clock_seconds_55.png" COMP;
   image: "clock/e17_clock_seconds_56.png" COMP;
   image: "clock/e17_clock_seconds_57.png" COMP;
   image: "clock/e17_clock_seconds_58.png" COMP;
   image: "clock/e17_clock_seconds_59.png" COMP;
   image: "clock/e17_clock_hour_00.png" COMP;
   image: "clock/e17_clock_hour_01.png" COMP;
   image: "clock/e17_clock_hour_02.png" COMP;
   image: "clock/e17_clock_hour_03.png" COMP;
   image: "clock/e17_clock_hour_04.png" COMP;
   image: "clock/e17_clock_hour_05.png" COMP;
   image: "clock/e17_clock_hour_06.png" COMP;
   image: "clock/e17_clock_hour_07.png" COMP;
   image: "clock/e17_clock_hour_08.png" COMP;
   image: "clock/e17_clock_hour_09.png" COMP;
   image: "clock/e17_clock_hour_10.png" COMP;
   image: "clock/e17_clock_hour_11.png" COMP;
   image: "clock/e17_clock_hour_12.png" COMP;
   image: "clock/e17_clock_hour_13.png" COMP;
   image: "clock/e17_clock_hour_14.png" COMP;
   image: "clock/e17_clock_hour_15.png" COMP;
   image: "clock/e17_clock_hour_16.png" COMP;
   image: "clock/e17_clock_hour_17.png" COMP;
   image: "clock/e17_clock_hour_18.png" COMP;
   image: "clock/e17_clock_hour_19.png" COMP;
   image: "clock/e17_clock_hour_20.png" COMP;
   image: "clock/e17_clock_hour_21.png" COMP;
   image: "clock/e17_clock_hour_22.png" COMP;
   image: "clock/e17_clock_hour_23.png" COMP;
   image: "clock/e17_clock_hour_24.png" COMP;
   image: "clock/e17_clock_hour_25.png" COMP;
   image: "clock/e17_clock_hour_26.png" COMP;
   image: "clock/e17_clock_hour_27.png" COMP;
   image: "clock/e17_clock_hour_28.png" COMP;
   image: "clock/e17_clock_hour_29.png" COMP;
   image: "clock/e17_clock_hour_30.png" COMP;
   image: "clock/e17_clock_hour_31.png" COMP;
   image: "clock/e17_clock_hour_32.png" COMP;
   image: "clock/e17_clock_hour_33.png" COMP;
   image: "clock/e17_clock_hour_34.png" COMP;
   image: "clock/e17_clock_hour_35.png" COMP;
   image: "clock/e17_clock_hour_36.png" COMP;
   image: "clock/e17_clock_hour_37.png" COMP;
   image: "clock/e17_clock_hour_38.png" COMP;
   image: "clock/e17_clock_hour_39.png" COMP;
   image: "clock/e17_clock_hour_40.png" COMP;
   image: "clock/e17_clock_hour_41.png" COMP;
   image: "clock/e17_clock_hour_42.png" COMP;
   image: "clock/e17_clock_hour_43.png" COMP;
   image: "clock/e17_clock_hour_44.png" COMP;
   image: "clock/e17_clock_hour_45.png" COMP;
   image: "clock/e17_clock_hour_46.png" COMP;
   image: "clock/e17_clock_hour_47.png" COMP;
   image: "clock/e17_clock_hour_48.png" COMP;
   image: "clock/e17_clock_hour_49.png" COMP;
   image: "clock/e17_clock_hour_50.png" COMP;
   image: "clock/e17_clock_hour_51.png" COMP;
   image: "clock/e17_clock_hour_52.png" COMP;
   image: "clock/e17_clock_hour_53.png" COMP;
   image: "clock/e17_clock_hour_54.png" COMP;
   image: "clock/e17_clock_hour_55.png" COMP;
   image: "clock/e17_clock_hour_56.png" COMP;
   image: "clock/e17_clock_hour_57.png" COMP;
   image: "clock/e17_clock_hour_58.png" COMP;
   image: "clock/e17_clock_hour_59.png" COMP;
   image: "clock/e17_clock_minutes_00.png" COMP;
   image: "clock/e17_clock_minutes_01.png" COMP;
   image: "clock/e17_clock_minutes_02.png" COMP;
   image: "clock/e17_clock_minutes_03.png" COMP;
   image: "clock/e17_clock_minutes_04.png" COMP;
   image: "clock/e17_clock_minutes_05.png" COMP;
   image: "clock/e17_clock_minutes_06.png" COMP;
   image: "clock/e17_clock_minutes_07.png" COMP;
   image: "clock/e17_clock_minutes_08.png" COMP;
   image: "clock/e17_clock_minutes_09.png" COMP;
   image: "clock/e17_clock_minutes_10.png" COMP;
   image: "clock/e17_clock_minutes_11.png" COMP;
   image: "clock/e17_clock_minutes_12.png" COMP;
   image: "clock/e17_clock_minutes_13.png" COMP;
   image: "clock/e17_clock_minutes_14.png" COMP;
   image: "clock/e17_clock_minutes_15.png" COMP;
   image: "clock/e17_clock_minutes_16.png" COMP;
   image: "clock/e17_clock_minutes_17.png" COMP;
   image: "clock/e17_clock_minutes_18.png" COMP;
   image: "clock/e17_clock_minutes_19.png" COMP;
   image: "clock/e17_clock_minutes_20.png" COMP;
   image: "clock/e17_clock_minutes_21.png" COMP;
   image: "clock/e17_clock_minutes_22.png" COMP;
   image: "clock/e17_clock_minutes_23.png" COMP;
   image: "clock/e17_clock_minutes_24.png" COMP;
   image: "clock/e17_clock_minutes_25.png" COMP;
   image: "clock/e17_clock_minutes_26.png" COMP;
   image: "clock/e17_clock_minutes_27.png" COMP;
   image: "clock/e17_clock_minutes_28.png" COMP;
   image: "clock/e17_clock_minutes_29.png" COMP;
   image: "clock/e17_clock_minutes_30.png" COMP;
   image: "clock/e17_clock_minutes_31.png" COMP;
   image: "clock/e17_clock_minutes_32.png" COMP;
   image: "clock/e17_clock_minutes_33.png" COMP;
   image: "clock/e17_clock_minutes_34.png" COMP;
   image: "clock/e17_clock_minutes_35.png" COMP;
   image: "clock/e17_clock_minutes_36.png" COMP;
   image: "clock/e17_clock_minutes_37.png" COMP;
   image: "clock/e17_clock_minutes_38.png" COMP;
   image: "clock/e17_clock_minutes_39.png" COMP;
   image: "clock/e17_clock_minutes_40.png" COMP;
   image: "clock/e17_clock_minutes_41.png" COMP;
   image: "clock/e17_clock_minutes_42.png" COMP;
   image: "clock/e17_clock_minutes_43.png" COMP;
   image: "clock/e17_clock_minutes_44.png" COMP;
   image: "clock/e17_clock_minutes_45.png" COMP;
   image: "clock/e17_clock_minutes_46.png" COMP;
   image: "clock/e17_clock_minutes_47.png" COMP;
   image: "clock/e17_clock_minutes_48.png" COMP;
   image: "clock/e17_clock_minutes_49.png" COMP;
   image: "clock/e17_clock_minutes_50.png" COMP;
   image: "clock/e17_clock_minutes_51.png" COMP;
   image: "clock/e17_clock_minutes_52.png" COMP;
   image: "clock/e17_clock_minutes_53.png" COMP;
   image: "clock/e17_clock_minutes_54.png" COMP;
   image: "clock/e17_clock_minutes_55.png" COMP;
   image: "clock/e17_clock_minutes_56.png" COMP;
   image: "clock/e17_clock_minutes_57.png" COMP;
   image: "clock/e17_clock_minutes_58.png" COMP;
   image: "clock/e17_clock_minutes_59.png" COMP;
}
group { name: "e/modules/clock/main";
   script {
      public clock_cb(val) {
	 new buf[11];
	 new year, month, day, yearday, weekday, hour, minute;
	 new Float:second;
	 new v;

	 date(year, month, day, yearday, weekday, hour, minute, second);
	 v = round(second);
#if SECONDS_PLEASE
	 timer(1.0 - (second - v), "clock_cb", 1);
#else
	 timer(10.0 - (second - v), "clock_cb", 1);
#endif
#if SECONDS_PLEASE
	 buf[0] = 0;
	 if (v < 10) {snprintf(buf, 10, "0%i", v);}
	 else        {snprintf(buf, 10, "%i", v);}
	 set_state(PART:"seconds", buf, 0.0);
#endif
	 v = minute;
	 buf[0] = 0;
	 if (v < 10) {snprintf(buf, 10, "0%i", v);}
	 else        {snprintf(buf, 10, "%i", v);}
	 set_state(PART:"minutes", buf, 0.0);

	 v = ((hour % 12) * 5) + ((minute * 5) / 60);
	 buf[0] = 0;
	 if (v < 10) {snprintf(buf, 10, "0%i", v);}
	 else        {snprintf(buf, 10, "%i", v);}
	 set_state(PART:"hour", buf, 0.0);
      }
   }
   parts {
      part {
	 name: "bg";
	 description {
	    state: "default" 0.0;
	    aspect: 1.0 1.0;
	    aspect_preference: BOTH;
	    image {
	       normal: "c_images/clock_bg.png";
	    }
	 }
      }
#ifdef IND
# undef IND
#endif
#if SECONDS_PLEASE
# define IND "seconds"
      part {
	 name: IND;
	 mouse_events: 0;
	 description {
	    state: "default" 0.0;
	    aspect: 1.0 1.0;
	    aspect_preference: BOTH;
	    rel1 {
	       relative: 0.05 0.05;
	    }
	    rel2 {
	       relative: 0.95 0.95;
	    }
	    image {
	       normal: "clock/e17_clock_"IND"_00.png";
	    }
	 }
# ifdef HAND
#  undef HAND
# endif
# define HAND(num)                                              \
	    description {                                       \
	       state: num 0.0;                                  \
	       inherit: "default" 0.0;                          \
	       image {                                          \
		  normal: "clock/e17_clock_"IND"_"num".png";    \
	       }                                                \
	    }
	 HAND("00")
	 HAND("01")
	 HAND("02")
	 HAND("03")
	 HAND("04")
	 HAND("05")
	 HAND("06")
	 HAND("07")
	 HAND("08")
	 HAND("09")
	 HAND("10")
	 HAND("11")
	 HAND("12")
	 HAND("13")
	 HAND("14")
	 HAND("15")
	 HAND("16")
	 HAND("17")
	 HAND("18")
	 HAND("19")
	 HAND("20")
	 HAND("21")
	 HAND("22")
	 HAND("23")
	 HAND("24")
	 HAND("25")
	 HAND("26")
	 HAND("27")
	 HAND("28")
	 HAND("29")
	 HAND("30")
	 HAND("31")
	 HAND("32")
	 HAND("33")
	 HAND("34")
	 HAND("35")
	 HAND("36")
	 HAND("37")
	 HAND("38")
	 HAND("39")
	 HAND("40")
	 HAND("41")
	 HAND("42")
	 HAND("43")
	 HAND("44")
	 HAND("45")
	 HAND("46")
	 HAND("47")
	 HAND("48")
	 HAND("49")
	 HAND("50")
	 HAND("51")
	 HAND("52")
	 HAND("53")
	 HAND("54")
	 HAND("55")
	 HAND("56")
	 HAND("57")
	 HAND("58")
	 HAND("59")
      }
#endif
#ifdef IND
# undef IND
#endif
#define IND "minutes"
      part {
	 name: IND;
	 mouse_events: 0;
	 description {
	    state: "default" 0.0;
	    aspect: 1.0 1.0;
	    aspect_preference: BOTH;
	    rel1 {
	       relative: 0.05 0.05;
	    }
	    rel2 {
	       relative: 0.95 0.95;
	    }
	    image {
	       normal: "clock/e17_clock_"IND"_00.png";
	    }
	 }
#ifdef HAND
# undef HAND
#endif
#define HAND(num)                                               \
	    description {                                       \
	       state: num 0.0;                                  \
	       inherit: "default" 0.0;                          \
	       image {                                          \
		  normal: "clock/e17_clock_"IND"_"num".png";    \
	       }                                                \
	    }
	 HAND("00")
	 HAND("01")
	 HAND("02")
	 HAND("03")
	 HAND("04")
	 HAND("05")
	 HAND("06")
	 HAND("07")
	 HAND("08")
	 HAND("09")
	 HAND("10")
	 HAND("11")
	 HAND("12")
	 HAND("13")
	 HAND("14")
	 HAND("15")
	 HAND("16")
	 HAND("17")
	 HAND("18")
	 HAND("19")
	 HAND("20")
	 HAND("21")
	 HAND("22")
	 HAND("23")
	 HAND("24")
	 HAND("25")
	 HAND("26")
	 HAND("27")
	 HAND("28")
	 HAND("29")
	 HAND("30")
	 HAND("31")
	 HAND("32")
	 HAND("33")
	 HAND("34")
	 HAND("35")
	 HAND("36")
	 HAND("37")
	 HAND("38")
	 HAND("39")
	 HAND("40")
	 HAND("41")
	 HAND("42")
	 HAND("43")
	 HAND("44")
	 HAND("45")
	 HAND("46")
	 HAND("47")
	 HAND("48")
	 HAND("49")
	 HAND("50")
	 HAND("51")
	 HAND("52")
	 HAND("53")
	 HAND("54")
	 HAND("55")
	 HAND("56")
	 HAND("57")
	 HAND("58")
	 HAND("59")
      }
#ifdef IND
# undef IND
#endif
#define IND "hour"
      part {
	 name: IND;
	 mouse_events: 0;
	 description {
	    state: "default" 0.0;
	    aspect: 1.0 1.0;
	    aspect_preference: BOTH;
	    rel1 {
	       relative: 0.1 0.1;
	    }
	    rel2 {
	       relative: 0.9 0.9;
	    }
	    image {
	       normal: "clock/e17_clock_"IND"_00.png";
	    }
	 }
#ifdef HAND
# undef HAND
#endif
#define HAND(num)                                               \
	    description {                                       \
	       state: num 0.0;                                  \
	       inherit: "default" 0.0;                          \
	       image {                                          \
		  normal: "clock/e17_clock_"IND"_"num".png";    \
	       }                                                \
	    }
	 HAND("00")
	 HAND("01")
	 HAND("02")
	 HAND("03")
	 HAND("04")
	 HAND("05")
	 HAND("06")
	 HAND("07")
	 HAND("08")
	 HAND("09")
	 HAND("10")
	 HAND("11")
	 HAND("12")
	 HAND("13")
	 HAND("14")
	 HAND("15")
	 HAND("16")
	 HAND("17")
	 HAND("18")
	 HAND("19")
	 HAND("20")
	 HAND("21")
	 HAND("22")
	 HAND("23")
	 HAND("24")
	 HAND("25")
	 HAND("26")
	 HAND("27")
	 HAND("28")
	 HAND("29")
	 HAND("30")
	 HAND("31")
	 HAND("32")
	 HAND("33")
	 HAND("34")
	 HAND("35")
	 HAND("36")
	 HAND("37")
	 HAND("38")
	 HAND("39")
	 HAND("40")
	 HAND("41")
	 HAND("42")
	 HAND("43")
	 HAND("44")
	 HAND("45")
	 HAND("46")
	 HAND("47")
	 HAND("48")
	 HAND("49")
	 HAND("50")
	 HAND("51")
	 HAND("52")
	 HAND("53")
	 HAND("54")
	 HAND("55")
	 HAND("56")
	 HAND("57")
	 HAND("58")
	 HAND("59")
      }
      part {
	 name: "overlay";
	 mouse_events: 0;
	 description {
	    state: "default" 0.0;
	    rel1 {
	       to: "bg";
	    }
	    rel2 {
	       to: "bg";
	    }
	    image {
	       normal: "c_images/clock_overlay.png";
	    }
	 }
      }
   }
   programs {
      program {
	 name: "init";
	 signal: "load";
	 source: "";
	 script {
	    clock_cb(0);
	 }
      }
   }
}

group { name: "e/modules/clock/digital";
	script {
		public do_seconds, do_24h, tick_timer, horizontal;
		public clock_cb(val) {
			new year, month, day, yearday, weekday, hour, minute;
			new Float:second;
			new v, dosec, do24h, tim;
			new buf[32], bhour[3], bminute[3], bsecond[4], bampm[3];

			date(year, month, day, yearday, weekday, hour, minute, second);

			dosec = get_int(do_seconds);
			do24h = get_int(do_24h);

			if (do24h) {
				strcat(bampm, "");
				if (hour < 10)
					snprintf(bhour, sizeof(bhour), "0%d", hour);
				else
					snprintf(bhour, sizeof(bhour), "%d", hour);

			} else {
				v = hour % 12;

				if (hour >= 12)
					strcat(bampm, "pm");
				else
					strcat(bampm, "am");

				if (v == 0)
					v = 12;

				if (v < 10)
					snprintf(bhour, sizeof(bhour), "0%d", v);
				else
					snprintf(bhour, sizeof(bhour), "%d", v);
			}

			if (minute < 10)
				snprintf(bminute, sizeof(bminute), "0%d", minute);
			else
				snprintf(bminute, sizeof(bminute), "%d", minute);

			if (dosec) {
				v = round(second);
				if (v < 10)
					snprintf(bsecond, sizeof(bsecond), ":0%d", v);
				else
					snprintf(bsecond, sizeof(bsecond), ":%d", v);
			} else
				strcat(bsecond, "");

			snprintf(buf, sizeof(buf), "%s:%s%s%s",
			         bhour, bminute, bsecond, bampm);
			set_text(PART:"time", buf);

			if (dosec) {
				v = round(second);
				tim = timer(1.0 - (second - v), "clock_cb", 1);
			} else {
				tim = timer(60.0 - (second), "clock_cb", 1);
			}
			set_int(tick_timer, tim);
		}

		public restart_clock() {
			new tim;
			tim = get_int(tick_timer);
			if (tim) {
				cancel_timer(tim);
				set_int(tick_timer, 0);
			}
			clock_cb(0);
		}
	}
	
parts {
		part { name: "time-area";
			type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				rel1.offset: 0 0;
				rel2.offset: 0 0;
			}
			description { state: "show-date" 0.0;
				inherit: "default" 0.0;
				rel2 {
					relative: 1.0 0.0;
					to: "e.text.today";
				}
			}
		}
		part { name: "time";
			type: TEXT;
			effect: SHADOW;
			scale: 1;
			description { state: "default" 0.0;
				//				TEXT_COLOR;
				color3: 232 182 107 255;
				color: 5 5 5 128;
				rel1.to: "time-area";
				rel2.to: "time-area";
				text {
					text_class: "clock";
					font: FONT;
					size: 14;
					fit: 1 1;
					min: 1 0;
					size_range: 9 72;
					ellipsis: -1;
					align: 0.5 0.5;
					text: "--:--";
				}
			}
			description { state: "horizontal" 0.0;
				inherit: "default" 0.0;
				text {
					fit: 0 1;
					min: 1 0;
				}
			}
			description { state: "vertical" 0.0;
				inherit: "default" 0.0;
				text {
					fit: 1 0;
					min: 0 1;
				}
			}
		}
		part { name: "e.text.today";
			type: TEXT;
			effect: SHADOW;
			scale: 1;
			description { state: "default" 0.0;
				//TEXT_COLOR
				color3: 232 182 107 255;
				color: 5 5 5 128;
				align: 0.5 1.0;
				min: 5 8;
				max: 9999 30;
				rel1 {
					relative: 0.0 0.9;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -1 -1;
				}
				text {
					text_class: "clock";
					font: FONT_BOLD;
					size: 9;
					fit: 0 1;
					min: 1 0;
					size_range: 7 72;
					align: 0.5 1.0;
					ellipsis: -1;
					text: "Tod, 12/30/2011";
				}
				visible: 0;
			}
			description { state: "show-date" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part { name: "event";
			type: RECT;
			mouse_events: 1;
			description { state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
	}

	programs {
		program { name: "init";
			signal: "load";
			source: "";
			script {
				clock_cb(0);
			}
		}
		program { name: "today,show";
			signal: "e,state,date,on";
			source: "e";
			script {
            set_state(PART:"time-area", "show-date", 0.0);
            set_state(PART:"e.text.today", "show-date", 0.0);
            restart_clock();
			}
		}
		program { name: "today,hide";
			signal: "e,state,date,off";
			source: "e";
			script {
			set_state(PART:"time-area", "default", 0.0);
			set_state(PART:"e.text.today", "default", 0.0);
            restart_clock();
			}
		}

		program { name: "secon";
			signal: "e,state,seconds,on";
			source: "e";
			script {
				set_int(do_seconds, 1);
				restart_clock();
			}
		}
		program { name: "secoff";
			signal: "e,state,seconds,off";
			source: "e";
			script {
				set_int(do_seconds, 0);
				restart_clock();
			}
		}
		program { name: "24h";
			signal: "e,state,24h,on";
			source: "e";
			script {
				set_int(do_24h, 1);
				restart_clock();
			}
		}
		program { name: "12h";
			signal: "e,state,24h,off";
			source: "e";
			script {
				set_int(do_24h, 0);
				restart_clock();
			}
		}
		program { name: "horizontal";
			signal: "e,state,horizontal";
			source: "e";
			action: STATE_SET "horizontal" 0.0;
			target: "time";
			after: "horizontal-eval";
		}
		program { name: "horizontal-eval";
			script {
				set_int(horizontal, 1);
			}
		}
		program { name: "vertical";
			signal: "e,state,vertical";
			source: "e";
			action: STATE_SET "vertical" 0.0;
			target: "time";
			after: "vertical-eval";
		}
		program { name: "vertical-eval";
			script {
				set_int(horizontal, 0);
			}
		}
	}
   }	

group { name: "e/modules/clock/calendar/dayname";
		parts {
			part {
				name: "e.text.label";
				type: TEXT;
				effect: SHADOW;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 232 182 107 255;
					color3: 5 5 5 128;
					align: 0.5 0.5;
					rel1.offset: 3 3;
					rel2.offset: -3 -3;
					text {
						text: "XXX";
						font: FONT;
						align: 0.5 0.5;
						size: 10;
						min: 1 1;
						text_class: "module_small";
						ellipsis: -1;
					}
				}
			}
		}
	}

	group { name: "e/modules/clock/calendar/day";
		parts {
			part { name: "weekend"; type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "weekend" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 32;
				}
			}
			part { name: "day"; type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 234 189 117 55;
				}
				description { state: "today" 0.0;
					inherit: "default" 0.0;
					color: 234 189 117 128;
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SHADOW;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					color:  0 0 0 255;
					color3: 0 0 0 0;
					rel1.offset: 4 4;
					rel2.offset: -4 -4;
					text {
						text: "88";
						font: FONT;
						align: 0.5 0.5;
						size: 9;
						min: 1 1;
						text_class: "module_small";
						ellipsis: -1;
					}
				}
				description { state: "today" 0.0;
					inherit: "default" 0.0;
					text.font: FONT_BOLD;
				}
				description { state: "hidden" 0.0;
					inherit: "default" 0.0;
					color3: 0 0 0 0;
				}
			}
		}
		programs {
			program { name: "weekend";
				signal: "e,state,weekend";
				source: "e";
				action: STATE_SET "weekend" 0.0;
				target: "weekend";
			}
			program { name: "weekday";
				signal: "e,state,weekday";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "weekend";
			}
			program { name: "hidden";
				signal: "e,state,hidden";
				source: "e";
				action: STATE_SET "hidden" 0.0;
				target: "e.text.label";
			}
			program { name: "visible";
				signal: "e,state,visible";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "e.text.label";
			}
			program { name: "today";
				signal: "e,state,today";
				source: "e";
				action: STATE_SET "today" 0.0;
				target: "day";
				target: "e.text.label";
			}
			program { name: "someday";
				signal: "e,state,someday";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "day";
			}
		}
	}

	group { name: "e/modules/clock/calendar";
		parts {
			part { name: "e.text.month";
				type: TEXT;
				scale: 1;
				effect: SHADOW;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 232 182 107 255;
					color3: 0 0 0 255;
					fixed: 0 1;
					align: 0.0 0.5;
					rel1 {
						to_x: "prev";
						relative: 1.0 0.0;
						offset: 0 10;
					}
					rel2 {
						relative: 1.0 0.0;
						offset: -1 10;
					}
					text {
						font: FONT_BOLD;
						align: 0.0 0.5;
						size: 14;
						min: 0 1;
						text_class: "module_normal";
					}
				}
			}
			part { name: "e.text.year";
				type: TEXT;
				scale: 1;
				effect: SHADOW;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 232 182 107 255;
					color3: 0 0 0 255;
					fixed: 0 1;
					align: 1.0 0.5;
					rel1 {
						relative: 0.0 0.0;
						offset: 0 10;
					}
					rel2 {
						to_x: "next";
						relative: 0.0 0.0;
						offset: -1 10;
					}
					text {
						font: FONT_BOLD;
						align: 1.0 0.5;
						size: 14;
						min: 0 1;
						text_class: "module_normal";
					}
				}
			}
			part { name: "previm";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1 {
						to: "prev";
						offset: 0 5;
					}
					rel2 {
						to: "prev";
						offset: -1 -3;
					}
					image.normal: "c_images/icon_left_arrow.png";
					min: 13 17;
					max: 13 17;
				}
				description { state: "pressed" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 0 -1;
					rel2.offset: -1 -2;
				}
			}
			part { name: "prev";
				type: RECT;
				description { state: "default" 0.0;
					align: 0.0 0.5;
					color: 0 0 0 0;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					rel1 {
						to_y: "e.text.month";
						relative: 0.0 0.0;
					}
					rel2 {
						to_y: "e.text.month";
						relative: 0.0 1.0;
					}
				}
				program { name: "prev_down";
					signal: "mouse,down,1";
					source: "prev";
					action: STATE_SET "pressed" 0.0;
					target: "previm";
				}
				program { name: "prev_up";
					signal: "mouse,up,1";
					source: "prev";
					action: STATE_SET "default" 0.0;
					target: "previm";
				}
				program { name: "prev_clicked";
					signal: "mouse,clicked,1";
					source: "prev";
					action: SIGNAL_EMIT "e,action,prev" "";
				}
			}
			part { name: "nextim";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1 {
						to: "next";
						offset: 0 5;
					}
					rel2 {
						to: "next";
						offset: -1 -3;
					}
					image.normal: "c_images/icon_right_arrow.png";
					min: 13 17;
					max: 13 17;
				}
				description { state: "pressed" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 0 -1;
					rel2.offset: -1 -2;
				}
			}
			part { name: "next";
				type: RECT;
				description { state: "default" 0.0;
					align: 1.0 0.5;
					color: 0 0 0 0;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					rel1.to_y: "e.text.month";
					rel1.relative: 1.0 0.0;
					rel2.to_y: "e.text.month";
					rel2.relative: 1.0 1.0;
				}
				program { name: "next_down";
					signal: "mouse,down,1";
					source: "next";
					action: STATE_SET "pressed" 0.0;
					target: "nextim";
				}
				program { name: "next_up";
					signal: "mouse,up,1";
					source: "next";
					action: STATE_SET "default" 0.0;
					target: "nextim";
				}
				program { name: "next_clicked";
					signal: "mouse,clicked,1";
					source: "next";
					action: SIGNAL_EMIT "e,action,next" "";
				}
			}
			part { name: "e.table.daynames"; type: TABLE;
				description { state: "default" 0.0;
					fixed: 0 1;
					align: 0.5 0.0;
					rel1.to_y: "e.text.month";
					rel1.relative: 0.0 1.0;
					rel1.offset: 2 2;
					rel2.to_y: "e.text.month";
					rel2.relative: 1.0 1.0;
					rel2.offset: -3 2;
					step: 7 1;
					table {
						homogeneous: TABLE;
						padding: 0 0;
						align: 0.5 0.5;
						min: 1 1;
					}
				}
				table { items {
#define DAYNAME(x)													\
						item {											\
							position: x 0;								\
							span: 1 1;									\
							source: "e/modules/clock/calendar/dayname"; \
							weight: 1.0 1.0;							\
							align: -1.0 -1.0;							\
						}
						DAYNAME(0);
						DAYNAME(1);
						DAYNAME(2);
						DAYNAME(3);
						DAYNAME(4);
						DAYNAME(5);
						DAYNAME(6);
					} }
			}
#undef DAYNAME
			part { name: "e.table.days"; type: TABLE;
				description { state: "default" 0.0;
					rel1.to_y: "e.table.daynames";
					rel1.relative: 0.0 1.0;
					rel1.offset: 2 2;
					rel2.offset: -3 -3;
					step: 7 5;
					table {
						homogeneous: TABLE;
						padding: 0 0;
						align: 0.5 0.5;
						min: 1 1;
					}
				}
				table { items {
#define DAY(x, y)												\
						item {										\
							position: x y;							\
							span: 1 1;								\
							source: "e/modules/clock/calendar/day"; \
							weight: 1.0 1.0;						\
							align: -1.0 -1.0;						\
						}
						DAY(0, 0);
						DAY(1, 0);
						DAY(2, 0);
						DAY(3, 0);
						DAY(4, 0);
						DAY(5, 0);
						DAY(6, 0);

						DAY(0, 1);
						DAY(1, 1);
						DAY(2, 1);
						DAY(3, 1);
						DAY(4, 1);
						DAY(5, 1);
						DAY(6, 1);

						DAY(0, 2);
						DAY(1, 2);
						DAY(2, 2);
						DAY(3, 2);
						DAY(4, 2);
						DAY(5, 2);
						DAY(6, 2);

						DAY(0, 3);
						DAY(1, 3);
						DAY(2, 3);
						DAY(3, 3);
						DAY(4, 3);
						DAY(5, 3);
						DAY(6, 3);

						DAY(0, 4);
						DAY(1, 4);
						DAY(2, 4);
						DAY(3, 4);
						DAY(4, 4);
						DAY(5, 4);
						DAY(6, 4);

						DAY(0, 5);
						DAY(1, 5);
						DAY(2, 5);
						DAY(3, 5);
						DAY(4, 5);
						DAY(5, 5);
						DAY(6, 5);
					} }
			}
		}
		programs {
			program {
				name: "mw_next";
				source: "*";
				signal: "mouse,wheel,0,-1";
				action: SIGNAL_EMIT "e,action,prev" "";
			}
			program {
				name: "mw_right";
				source: "*";
				signal: "mouse,wheel,0,1";
				action: SIGNAL_EMIT "e,action,next" "";
			}
		}
	}
